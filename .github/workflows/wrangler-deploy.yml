name: Deploy Cloudflare Worker

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          # Try to use npm ci first, fall back to npm install if it fails
          npm ci || npm install

      - name: Deploy with Wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: deploy src/index.simple.js --name aiderfixer
        env:
          APP_ID: ${{ secrets.APP_ID }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          # GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PAT_PAT: ${{ secrets.PAT_PAT }}

      - name: Set Cloudflare Worker Secrets
        if: success()
        run: |
          echo "Setting Cloudflare Worker secrets..."
          npx wrangler secret put APP_ID --name aiderfixer <<< "${{ secrets.APP_ID }}"
          npx wrangler secret put WEBHOOK_SECRET --name aiderfixer <<< "${{ secrets.WEBHOOK_SECRET }}"
          npx wrangler secret put PRIVATE_KEY --name aiderfixer <<< "${{ secrets.PRIVATE_KEY }}"
          # npx wrangler secret put GEMINI_API_KEY --name aiderfixer <<< "${{ secrets.GEMINI_API_KEY }}"
          npx wrangler secret put PAT_PAT --name aiderfixer <<< "${{ secrets.PAT_PAT }}"
          echo "Secrets set successfully!"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
